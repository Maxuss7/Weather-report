name: CI Pipeline

on:
  push:
    branches:
      - develop
  pull_request:
    branches:
      - develop

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set environment variables
        run: |
          echo "POSTGRES_USER=${{ secrets.POSTGRES_USER }}" >> .env
          echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> .env
          echo "POSTGRES_DB=${{ secrets.POSTGRES_DB }}" >> .env
          echo "DB_PORTS=${{ secrets.DB_PORTS }}" >> .env
          echo "REDIS_PORTS=${{ secrets.REDIS_PORTS }}" >> .env
          echo "REDIS_PASSWORD=${{ secrets.REDIS_PASSWORD }}" >> .env
          echo "REDIS_DATA_PATH=${{ vars.REDIS_DATA_PATH }}" >> .env
          echo "BACKEND_PORTS=${{ secrets.BACKEND_PORTS }}" >> .env
          echo "BACKEND_PATH=${{ vars.BACKEND_PATH }}" >> .env
          echo "FRONTEND_PORTS=${{ secrets.FRONTEND_PORTS }}" >> .env
          echo "FRONTEND_PATH=${{ vars.FRONTEND_PATH }}" >> .env

  build:
    needs: setup
    runs-on: ubuntu-24.04
    steps:
      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: List all files and directories
        run: ls -R
        
      - name: Verify docker-compose.yml exists
        run: |
          if [ ! -f docker-compose.yml ]; then
            echo "docker-compose.yml not found in $(pwd)"
            exit 1
          fi

      - name: Run Docker Compose
        run: docker compose up -d --build

  test:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Wait for the application to be ready
        run: |
          echo "Waiting for the app to be ready..."
          sleep 10
          curl --fail http://localhost:8000/

      - name: Run tests
        run: |
          curl --fail http://localhost:8000/api/weather?city=Moscow
          curl --fail http://localhost:8000/api/weather?city=Moscow
          docker logs $(docker ps -q -f "name=backend") 2>&1 | grep -i error && exit 1 || echo "No errors found in Uvicorn logs."

  cleanup:
    needs: [test, build]
    runs-on: ubuntu-latest
    steps:
      - name: Stop and clean up
        run: docker compose down
